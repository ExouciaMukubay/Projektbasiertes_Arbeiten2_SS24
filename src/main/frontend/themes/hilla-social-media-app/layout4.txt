import {useViewConfig} from '@vaadin/hilla-file-router/runtime.js';
import {effect, signal} from '@vaadin/hilla-react-signals';
import {DrawerToggle} from '@hilla/react-components/DrawerToggle.js';
import {AppLayout} from '@hilla/react-components/AppLayout.js';

import {Tabs} from '@hilla/react-components/Tabs.js';
import {Tab} from '@hilla/react-components/Tab.js';
import {Icon} from '@hilla/react-components/Icon.js';
import {useAuth} from 'Frontend/util/auth.js';
import '@vaadin/icons';

import {Suspense, useEffect} from 'react';
import {Link, Outlet, useLocation, useNavigate} from 'react-router-dom';
import {Button} from '@vaadin/react-components';

const defaultTitle = document.title;
const documentTitleSignal = signal('');
effect(() => {
    document.title = documentTitleSignal.value;
});

// Publish for Vaadin to use
(window as any).Vaadin.documentTitleSignal = documentTitleSignal;

/**
 * Defines layout and navigation of the application
 */
export default function MainLayout() {
    const currentTitle = useViewConfig()?.title ?? defaultTitle;
    const navigate = useNavigate();
    const location = useLocation();

    useEffect(() => {
        documentTitleSignal.value = currentTitle;
        console.log("CurrentTitle: " + currentTitle);
    }, [currentTitle]);

    const {state, logout} = useAuth();

    const h1Style = {
        fontSize: 'var(--lumo-font-size-l)',
        margin: 0,
    };

    const iconStyle: React.CSSProperties = {
        boxSizing: 'border-box',
        marginInlineEnd: 'var(--lumo-space-m)',
        marginInlineStart: 'var(--lumo-space-xs)',
        padding: 'var(--lumo-space-xs)',
    };
    return (
        <AppLayout primarySection="navbar">
            <DrawerToggle slot="navbar" aria-label="Menu toggle"/>
            {state.user ? (
                <>
                    <h1 slot="navbar" style={h1Style}>
                        Social Media App
                    </h1>

                    <Tabs slot="drawer" orientation="vertical">
                        <Tab>
                            <a tabIndex={-1}>
                                <Icon icon="vaadin:home" style={iconStyle}/>
                                <span>Home</span>
                            </a>
                        </Tab>
                        <Tab>
                            <a tabIndex={-1}>
                                <Icon icon="vaadin:bell" style={iconStyle}/>
                                <span>Notifications</span>
                            </a>
                        </Tab>
                        <Tab>
                            <a tabIndex={-1}>
                                <Icon icon="vaadin:chat" style={iconStyle}/>
                                <span>Messages</span>
                            </a>
                        </Tab>
                        <Tab>
                            <a tabIndex={-1}>
                                <Icon icon="vaadin:group" style={iconStyle}/>
                                <span>Friends</span>
                            </a>
                        </Tab>
                        <Tab>
                            <a tabIndex={-1}>
                                <Icon icon="vaadin:user" style={iconStyle}/>
                                <span>Profile</span>
                            </a>
                        </Tab>
                    </Tabs>
                    <footer className="flex flex-col gap-s">
                        {state.user ? (
                            <>
                                <Button
                                    onClick={async () => {
                                        await logout();
                                        document.location.reload();
                                    }}
                                >
                                    Sign out
                                </Button>
                            </>
                        ) : (
                            <Link to="/login">Sign in</Link>
                        )}
                    </footer>


                </>


            ) : null}
            <Suspense>
                <Outlet/>
            </Suspense>
        </AppLayout>
    );
}
